
<p>智慧医疗安装部署文档V1.0.0</p>

<hr><p>系统名称       智慧医疗
  项目负责人<br>
  作者<br>
  文档提交日期   2015-8</p>

<hr><p>赛特斯信息科技股份有限公司</p>

<p>（版权所有，翻版必究）</p>

<p>修订记录</p>

<hr><p>No   修改后   修改内容简介   修改日期   修改人</p>

<pre><code>   版本号                             
</code></pre>

<p>1    1.0.0    初稿                      李根</p>

<hr><p>目录</p>

<p><a href="#%E8%83%8C%E6%99%AF"><em>1</em> <em>背景</em> 3</a></p>

<p><a href="#%E5%90%8D%E8%AF%8D%E8%A7%A3%E6%9E%90"><em>2</em> <em>名词解析</em> 3</a></p>

<p><a href="#%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE"><em>3</em> <em>系统配置</em> 3</a></p>

<blockquote>
  <p><a href="#centos-6.7%E7%B3%BB%E7%BB%9F"><em>3.1</em> <em>CentOS 6.7系统</em> 3</a></p>
  
  <p><a href="#hosts%E9%85%8D%E7%BD%AE"><em>3.1.1</em> <em>HOSTS配置</em> 3</a></p>
  
  <p><a href="#%E4%B8%BB%E6%9C%BA%E5%90%8D%E9%85%8D%E7%BD%AE"><em>3.1.2</em> <em>主机名配置</em> 4</a></p>
  
  <p><a href="#%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E4%BF%AE%E6%94%B9"><em>3.1.3</em> <em>命令提示符修改</em> 4</a></p>
  
  <p><a href="#cenos-7.0%E7%B3%BB%E7%BB%9F"><em>3.2</em> <em>软件版本</em> 4</a></p>
  
  <p><a href="#openssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95"><em>3.3</em> <em>OpenSSH免密码登录</em> 5</a></p>
  
  <p><a href="#rsa%E8%AE%A4%E8%AF%81"><em>3.3.1</em> <em>RSA认证</em> 5</a></p>
  
  <p><a href="#dsa%E8%AE%A4%E8%AF%81"><em>3.3.2</em> <em>DSA认证</em> 6</a></p>
</blockquote>

<p><a href="#jdk7%E5%AE%89%E8%A3%85"><em>4</em> <em>JDK7安装</em> 7</a></p>

<blockquote>
  <p><a href="#jdk%E4%B8%8B%E8%BD%BD"><em>4.1</em> <em>JDK下载</em> 7</a></p>
  
  <p><a href="#jdk%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>4.2</em> <em>JDK安装配置</em> 7</a></p>
</blockquote>

<p><a href="#tomcat%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>5</em> <em>Tomcat安装配置</em> 9</a></p>

<blockquote>
  <p><a href="#tomcat%E4%B8%8B%E8%BD%BD"><em>5.1</em> <em>Tomcat下载</em> 9</a></p>
  
  <p><a href="#tomcat%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-1"><em>5.2</em> <em>Tomcat安装配置</em> 9</a></p>
  
  <p><a href="#tomcat-session%E5%85%B1%E4%BA%AB"><em>5.3</em> <em>Tomcat Session共享</em> 10</a></p>
  
  <p><a href="#redis-session%E5%85%B1%E4%BA%AB"><em>5.3.1</em> <em>Redis Session共享</em> 10</a></p>
</blockquote>

<p><a href="#mysql%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>6</em> <em>MySQL安装配置</em> 11</a></p>

<blockquote>
  <p><a href="#mysql%E4%B8%8B%E8%BD%BD"><em>6.1</em> <em>MySQL下载</em> 11</a></p>
  
  <p><a href="#mysql%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-1"><em>6.2</em> <em>MySQL安装配置</em> 11</a></p>
  
  <p><a href="#mysql%E7%BC%96%E7%A0%81%E6%9F%A5%E8%AF%A2"><em>6.2.1</em> <em>MySQL编码查询</em> 11</a></p>
  
  <p><a href="#mysql%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9"><em>6.2.2</em> <em>MySQL密码修改</em> 13</a></p>
  
  <p><a href="#mysql%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95"><em>6.2.3</em> <em>MySQL远程登录</em> 13</a></p>
</blockquote>

<p><a href="#postgresql%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>7</em> <em>Nginx安装配置</em> 14</a></p>

<blockquote>
  <p><a href="#nginx%E4%B8%8B%E8%BD%BD"><em>7.1</em> <em>Nginx下载</em> 14</a></p>
  
  <p><a href="#nginx-yum%E5%AE%89%E8%A3%85"><em>7.2</em> <em>Nginx YUM安装方法</em> 14</a></p>
  
  <p><a href="#nginx%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95"><em>7.3</em> <em>Nginx编译安装方法</em> 15</a></p>
</blockquote>

<p><a href="#zabbix%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>8</em> <em>Zabbix安装配置</em> 16</a></p>

<blockquote>
  <p><a href="#hosts%E9%85%8D%E7%BD%AE-1"><em>8.1</em> <em>HOSTS配置</em> 16</a></p>
  
  <p><a href="#%E6%B5%81%E7%A8%8B%E8%AF%B4%E6%98%8E"><em>8.1.1</em> <em>流程说明</em> 16</a></p>
</blockquote>

<p><a href="#zookeeper%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>9</em> <em>ZooKeeper安装配置</em> 16</a></p>

<blockquote>
  <p><a href="#zookeeper%E4%B8%8B%E8%BD%BD"><em>9.1</em> <em>ZooKeeper下载</em> 16</a></p>
  
  <p><a href="#%E4%BC%AA%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B%E6%AD%A5%E9%AA%A4"><em>9.1.1</em> <em>流程说明</em> 16</a></p>
</blockquote>

<p><a href="#redis%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>10</em> <em>Redis安装配置</em> 17</a></p>

<blockquote>
  <p><a href="#redis%E4%B8%8B%E8%BD%BD"><em>10.1</em> <em>Redis下载</em> 17</a></p>
  
  <p><a href="#%E6%B5%81%E7%A8%8B%E8%AF%B4%E6%98%8E-2"><em>10.1.1</em> <em>流程说明</em> 17</a></p>
</blockquote>

<p><a href="#codis%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"><em>11</em> <em>Codis安装配置</em> 17</a></p>

<blockquote>
  <p><a href="#codis%E4%B8%8B%E8%BD%BD"><em>11.1</em> <em>Codis下载</em> 17</a></p>
  
  <p><a href="#%E6%B5%81%E7%A8%8B%E8%AF%B4%E6%98%8E-3"><em>11.1.1</em> <em>流程说明</em> 17</a></p>
</blockquote>

<h1 class="sectionedit1" id="背景">背景</h1>

<p>本文旨在智慧社区卡片的方案具体设计。</p>

<h1 class="sectionedit1" id="名词解析">名词解析</h1>

<ul><li>APP ID:是应用在开发者中心中唯一数字ID</li>
</ul><h1 class="sectionedit1" id="系统配置">系统配置</h1>

<p>服务器名称   主机名    IP              服务器域名</p>

<hr><p>服务器A      host201   172.17.40.201   host201<br>
  服务器B      host202   172.17.40.202   host202<br>
  服务器C      host203   172.17.40.202   host203</p>

<h2 class="sectionedit2" id="centos_67系统">CentOS 6.7系统</h2>

<p>CentOS系统采用6.7系统，安装选择Software Development Workstation
版本（包含基本系统、虚拟化平台、桌面环境、开放工具等1538个软件包）。yum
update 更新安装源。</p>

<h3 class="sectionedit3" id="hosts配置">HOSTS配置</h3>

<ol><li><p>命令 vi /etc/hosts</p></li>
<li><p>修改hosts文件，新增 三行，内容如下</p></li>
</ol><blockquote>
  <p>172.17.40.201 host201\
  172.17.40.202 host202\
  172.17.40.203 host203</p>
</blockquote>

<ol><li><p>esc，输入wq 保存文件，并退出。</p></li>
<li><p>命令 ping host201 或 ping host202 或ping host203 ，确认是否生效</p></li>
</ol><p>其他服务器都进行对应修改。</p>

<h3 class="sectionedit3" id="主机名配置">主机名配置</h3>

<ol><li><p>命令 vi /etc/sysconfig/network</p></li>
<li><p>修改network文件，修改HOSTNAME行，内容如下</p></li>
</ol><blockquote>
  <p>HOSTNAME=host201</p>
</blockquote>

<ol><li><p>esc，输入wq 保存文件，并退出。</p></li>
<li><p>命令hostname host201</p></li>
<li><p>重启系统 命令 reboot，完成后命令 hostname 确认是否生效</p></li>
</ol><p>其他服务器都进行对应修改。</p>

<h3 class="sectionedit3" id="命令提示符修改">命令提示符修改</h3>

<ol><li><p>命令 echo \$PS1，显示当前命令提示符格式</p></li>
<li><p>命令 vi \~/.bashrc，修改.bashrc文件，增加行，内容如下</p></li>
</ol><blockquote>
  <p>#export PS1='[\u@\h \W]\\$'</p>
  
  <p>字符含义：\u显示当前用户帐号，\h显示当前主机名，\w显示当前完整工作路径（\W显示当前工作路径），\\$显示’\$’符号</p>
</blockquote>

<ol><li><p>esc，输入wq 保存文件，并退出。</p></li>
<li><p>重新登录控制台，确认是否生效命令</p></li>
</ol><p>其他服务器都进行对应修改。</p>

<h2 class="sectionedit2" id="cenos_70系统">CenOS 7.0系统</h2>

<ol><li><strong>EPEL yum</strong></li>
</ol><p><strong>http://fedoraproject.org/wiki/EPEL</strong></p>

<p>rpm -Uvh
https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</p>

<ol><li><strong>网络配置</strong></li>
</ol><p>vi /etc/sysconfig/network-scripts/ifcfg-em4</p>

<p>TYPE=Ethernet</p>

<p>BOOTPROTO=none</p>

<p>DEFROUTE=yes</p>

<p>IPV4_FAILURE_FATAL=no</p>

<p>IPV6INIT=yes</p>

<p>IPV6_AUTOCONF=yes</p>

<p>IPV6_DEFROUTE=yes</p>

<p>IPV6_FAILURE_FATAL=no</p>

<p>NAME=em4</p>

<p>UUID=3c25b407-ddaa-4128-a4bb-7100d761451e</p>

<p>DEVICE=em4</p>

<p>ONBOOT=yes</p>

<p>IPADDR=172.16.1.202</p>

<p>PREFIX=24</p>

<p>GATEWAY=172.16.1.1</p>

<p>DNS1=114.114.114.114</p>

<p>IPV6_PEERDNS=yes</p>

<p>IPV6_PEERROUTES=yes</p>

<p>#service network restart</p>

<ol><li><strong>用户管理</strong></li>
</ol><p>添加用户</p>

<p>adduser {username}</p>

<p>修改密码</p>

<p>passwd {username}</p>

<p>删除用户</p>

<p>userdel {username}</p>

<p><strong>禁止ROOT远程登录</strong></p>

<p>#<strong>vi /etc/ssh/sshd_config</strong></p>

<p><strong>修改为PermitRootLogin no</strong></p>

<p><strong>service sshd restart</strong></p>

<ol><li><strong>防火墙配置</strong></li>
</ol><p>1、直接关闭firewalld防火墙</p>

<p>#systemctl stop firewalld.service #停止firewall</p>

<p>#systemctl disable firewalld.service #禁止firewall开机启动</p>

<p>2、设置 iptables service</p>

<p>#yum -y install iptables-services</p>

<p>如果要修改防火墙配置，如增加防火墙端口3306</p>

<p>#vi /etc/sysconfig/iptables</p>

<p>增加规则</p>

<p>-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT</p>

<p>保存退出后</p>

<p>#systemctl restart iptables.service #重启防火墙使配置生效</p>

<p>#systemctl enable iptables.service #设置防火墙开机启动</p>

<h3 class="sectionedit3" id="selinux关闭">SELINUX关闭</h3>

<p>1、查看selinux状态</p>

<p>查看selinux的详细状态，如果为enable则表示为开启</p>

<p># /usr/sbin/sestatus -v</p>

<p>2、查看selinux的模式</p>

<p># getenforce</p>

<p>3、永久性关闭（这样需要重启服务器后生效）</p>

<p># sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config</p>

<p>4、临时性关闭（立即生效，但是重启服务器后失效）</p>

<p># setenforce 0 #设置selinux为permissive模式（即关闭）</p>

<p># setenforce 1 #设置selinux为enforcing模式（即开启）</p>

<p>或者 增加NGINX网络访问</p>

<p>setsebool -P httpd_can_network_connect 1</p>

<h2 class="sectionedit2" id="linux命令">Linux命令</h2>

<p>Linux版本查看</p>

<p># uname –a</p>

<p># more /etc/redhat-release</p>

<p>#lsb_release –a</p>

<p>#yum install lsb</p>

<p>getconf LONG_BIT </p>

<p>64位系统运行32位软件。</p>

<p># <strong>yum install glibc*.i686</strong>\
# <strong>yum install zlib*.i686</strong>\
# <strong>yum install libstdc++.so.6</strong></p>

<h2 class="sectionedit2" id="软件版本">软件版本</h2>

<p>软件名称    软件版本   软件文件名                    安装路径</p>

<hr><p>Java        jdk-7u79   jdk-7u79-linux-x64.tar.gz     usr/local/java/
  Tomcat      7.0.63     apache-tomcat-7.0.63.tar.gz   usr/local/tomcat/
  Nginx       1.8.0                                    usr/local/nginx/
  MySQL       5.5<br>
  ZooKeeper<br>
  Redis</p>

<h2 class="sectionedit2" id="openssh免密码登录">OpenSSH免密码登录</h2>

<p>OpenSSH 密钥管理,参考</p>

<p>http://www.ibm.com/developerworks/cn/linux/security/openssh/part1/index.html</p>

<p>http://www.ibm.com/developerworks/cn/linux/security/openssh/part2/index.html</p>

<p>http://www.ibm.com/developerworks/cn/linux/security/openssh/part3/index.html</p>

<h3 class="sectionedit3" id="rsa认证">RSA认证</h3>

<p>A机器客户端，B机器服务端</p>

<p>/etc/init.d/sshd restart </p>

<ol><li>A机器root用户执行ssh-keygen命令回车，生成安全信任关系证书</li>
</ol><blockquote>
  <p># ssh-keygen -t rsa</p>
  
  <p>Generating public/private rsa key pair.\
  Enter file in which to save the key (/root/.ssh/id_rsa):\
  Enter passphrase (empty for no passphrase):\
  Enter same passphrase again:\
  Your identification has been saved in /root/.ssh/id_rsa.\
  Your public key has been saved in /root/.ssh/id_rsa.pub.\
  The key fingerprint is:\
  f3:5d:c7:e2:da:47:e9:17:52:2e:49:92:88:c6:a9:6e lig@ligdeMBP.lan\
  The key's randomart image is:\
  +--[ RSA 2048]----+\
  | |\
  | |\
  | . o . . |\
  | = . o . o |\
  | o S o * +|\
  | . o . * *.|\
  | . . . =..|\
  | E o .o|\
  | . . ...|\
  +-----------------+</p>
  
  <p>在程序提示输入passphrase时直接输入回车，表示无证书密码。</p>
  
  <p>上述命令将生成私钥证书id_rsa和公钥证书id_rsa.pub，存放在用户\~/.ssh目录下</p>
</blockquote>

<ol><li>查看\~/.ssh生成的密钥文件</li>
</ol><blockquote>
  <p># lig\$ cd \~/.ssh\
  # ls -l\
  total 24\
  -rw-r--r-- 1 root root 396 Aug 19 14:10 authorized_keys\
  -rw------- 1 root root 1671 Aug 19 14:10 id_rsa\
  -rw-r--r-- 1 root root 396 Aug 19 14:10 id_rsa.pub\
  -rw-r--r-- 1 root root 391 Aug 19 14:13 known_hosts\
  #</p>
</blockquote>

<ol><li>A对B建立信任关系</li>
</ol><blockquote>
  <p>将公钥证书id_rsa.pub复制到机器B的root/.ssh/目录下，同时将文件名更换为
  authorized_keys，此时需要输入B机器的root用户密码（还未建立信任关系）。建立了客户端到服务器端的信任关系后，客户端就可以不用再输入密码，就可以从服务器端拷贝数据了。</p>
</blockquote>

<p>scp -r id_rsa.pub 10.0.0.188:/root/.ssh/<span id="OLE_LINK3" class="anchor"><span id="OLE_LINK4" class="anchor"></span></span>authorized_keys</p>

<blockquote>
  <p>sudo chmod 644 \~/.ssh/authorized_keys</p>
  
  <p>sudo chmod 700 \~/.ssh</p>
</blockquote>

<ol><li>服务器端验证</li>
</ol><blockquote>
  <p>ssh localhost</p>
</blockquote>

<h3 class="sectionedit3" id="dsa认证">DSA认证</h3>

<h1 class="sectionedit1" id="jdk7安装">JDK7安装</h1>

<h2 class="sectionedit2" id="jdk下载">JDK下载</h2>

<h2 class="sectionedit2" id="jdk安装配置">JDK安装配置</h2>

<ol><li>卸载自带OpenJDK</li>
</ol><blockquote>
  <p>查看已安装的jdk文件</p>
  
  <p>rpm -qa | grep jdk</p>
  
  <p>java-1.6.0-openjdk-1.6.0.35-1.13.7.1.el6_6.x86_64\
  java-1.6.0-openjdk-javadoc-1.6.0.35-1.13.7.1.el6_6.x86_64\
  java-1.6.0-openjdk-devel-1.6.0.35-1.13.7.1.el6_6.x86_64\
  java-1.7.0-openjdk-devel-1.7.0.79-2.5.5.4.el6.x86_64\
  java-1.7.0-openjdk-1.7.0.79-2.5.5.4.el6.x86_64</p>
  
  <p>rpm -qa | grep gcj</p>
  
  <p>java-1.5.0-gcj-1.5.0.0-29.1.el6.x86_64</p>
</blockquote>

<p>RPM包安装</p>

<blockquote>
  <p>[root@light162 alternatives]#rpm -ivh jdk-8u91-linux-x64.rpm</p>
</blockquote>

<ol><li><blockquote>
  <p>安装到/usr/local/java目录下</p>
  
  <p>服务器命令：</p>
  
  <p>[root@medical-server-pc-130 \~]# cd /usr/local/</p>
  
  <p>[root@medical-server-pc-130 local]# mkdir java</p>
  
  <p>[root@medical-server-pc-130 local]# cd java</p>
  
  <p>[root@medical-server-pc-130 java]#</p>
  
  <p>客户端上传文件到服务器</p>
  
  <p>scp jdk-7u79-linux-x64.tar.gz root@192.168.1.130:/usr/local/java/</p>
  
  <p>服务器命令：</p>
  
  <p>解压文件</p>
  
  <p>[root@medical-server-pc-130 java]# tar zxvf
  jdk-7u79-linux-x64.tar.gz</p>
  
  <p>[root@medical-server-pc-130 java]# rm jdk-7u79-linux-x64.tar.gz</p>
  
  <p>JDK 安装目录为：</p>
  
  <p>/usr/local/java/jdk1.7.0_79</p>
</blockquote></li>
<li><p>配置</p></li>
<li><p>配置 /etc/profile文件尾部增加</p></li>
</ol><p>#vi /etc/profile</p>

<p>export JAVA_HOME=/usr/local/java/jdk1.7.0_79</p>

<p>export PATH=\$JAVA_HOME/bin: \$PATH</p>

<p>export CLASSPATH=.:\$JAVA_HOME/lib:\$JAVA_HOME/jre/lib</p>

<p>#source /etc/profile</p>

<p>#echo "#######JAVA_HOME#######"&gt;&gt; /etc/profile</p>

<p>#echo " export JAVA_HOME=/usr/local/java/jdk1.7.0_79"&gt;&gt;
/etc/profile</p>

<p>#echo " export PATH=\$JAVA_HOME/bin:\$PATH "&gt;&gt; /etc/profile</p>

<p>#echo " export CLASSPATH=.:\$JAVA_HOME/lib:\$JAVA_HOME/jre/lib
"&gt;&gt; /etc/profile</p>

<p>#source /etc/profile</p>

<ol><li>验证</li>
</ol><p>执行java –version 命令，查看版本信息</p>

<p>[root@medical-server-pc-130 jdk1.7.0_79]# java -version</p>

<p>java version "1.7.0_79"\
Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\
Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)</p>

<h1 class="sectionedit1" id="tomcat安装配置">Tomcat安装配置</h1>

<h2 class="sectionedit2" id="tomcat下载">Tomcat下载</h2>

<h2 class="sectionedit2" id="tomcat安装配置1">Tomcat安装配置</h2>

<ol><li>上传解压文件到/usr/local/tomcat</li>
</ol><blockquote>
  <p>scp apache-tomcat-7.0.63.tar.gz root@192.168.1.130:/usr/local/tomcat/</p>
</blockquote>

<ol><li>配置/etc/profile 在文件末尾添加</li>
</ol><blockquote>
  <p>#vim /etc/profile\
  export TOMCAT_HOME=/usr/local/tomcat/apache-tomcat-7.0.63\
  #source /etc/profile\
  #cd /apache-tomcat/bin/\
  #chmod 777 *.sh\
  mv ROOT ROOT.old</p>
  
  <p>#echo "####### TOMCAT _HOME#######"&gt;&gt;
  /etc/profile</p>
  
  <p>#echo " export
  TOMCAT_HOME=/usr/local/tomcat/apache-tomcat-7.0.63"&gt;&gt;
  /etc/profile</p>
</blockquote>

<ol><li>修改内存配置</li>
</ol><p>bin/catalina.sh文件修改JAVA_OPTS,新增如下</p>

<h2 class="sectionedit2" id="execute_the_requested_command"># ----- Execute The Requested Command</h2>

<p>JAVA_OPTS="\$JAVA_OPTS -server -XX:PermSize=128M -XX:MaxPermSize=512m"</p>

<ol><li>防火墙，增加例外</li>
</ol><p>iptables -I INPUT 5 -p tcp --dport 8080 -j ACCEPT</p>

<ol><li>启动tomcat</li>
</ol><blockquote>
  <p>[root@medical-server-pc-130 bin]# ./startup.sh\
  Using CATALINA_BASE: /usr/local/tomcat/apache-tomcat-7.0.63\
  Using CATALINA_HOME: /usr/local/tomcat/apache-tomcat-7.0.63\
  Using CATALINA_TMPDIR: /usr/local/tomcat/apache-tomcat-7.0.63/temp\
  Using JRE_HOME: /usr/local/java/jdk1.7.0_79\
  Using CLASSPATH:
  /usr/local/tomcat/apache-tomcat-7.0.63/bin/bootstrap.jar:/usr/local/tomcat/apache-tomcat-7.0.63/bin/tomcat-juli.jar\
  Tomcat started.</p>
</blockquote>

<p>浏览器访问：http://ip:8080</p>

<h2 class="sectionedit2" id="tomcat_session共享">Tomcat Session共享</h2>

<h3 class="sectionedit3" id="redis_session共享">Redis Session共享</h3>

<h1 class="sectionedit1" id="mysql安装配置">MySQL安装配置</h1>

<h2 class="sectionedit2" id="mysql下载">MySQL下载</h2>

<p>YUM下载安装地址</p>

<p>http://dev.mysql.com/downloads/repo/yum/</p>

<p>CentOS7 下载安装</p>

<p>http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</p>

<p>[root@light162 \~]#yum install -y mysql-community-server</p>

<p>foTjTeCZf9</p>

<p>mysql-community-common-5.7.12-1.el7.x86_64.rpm
mysql-community-libs-5.7.12-1.el7.x86_64.rpm
mysql-community-libs-compat-5.7.12-1.el7.x86_64.rpm</p>

<p>mysql-community-client-5.7.12-1.el7.x86_64.rpm</p>

<p>mysql-community-server-5.7.12-1.el7.x86_64.rpm</p>

<h2 class="sectionedit2" id="mysql安装配置1">MySQL安装配置</h2>

<p>yum install -y mysql-server</p>

<p>mysqladmin -u root password 'root'</p>

<p>service mysqld restart</p>

<p>防火墙设置</p>

<p>iptables -I INPUT 5 -p tcp -m state --state NEW -m tcp --dport 3306 -j
ACCEPT</p>

<p>update mysql.user set password=PASSWORD('root') where user='root'</p>

<p>mysql 5.7生成随机密码 /var/log/mysqld.log</p>

<p>A temporary password is generated for root@localhost : foTjTeCZf9/*</p>

<p>grant all privileges on media.* to medical_app@'%'  identified by
'medical_app' with grant option;</p>

<h3 class="sectionedit3" id="mysql编码查询">MySQL编码查询</h3>

<p>mysql&gt;SHOW VARIABLES LIKE 'character_set_%';</p>

<p>+--------------------------+-----------------------------------------------+</p>

<p>| Variable_name | Value |</p>

<p>+--------------------------+-----------------------------------------------+</p>

<p>| character_set_client | utf8 |</p>

<p>| character_set_connection | utf8 |</p>

<p>| character_set_database | utf8 |</p>

<p>| character_set_filesystem | binary |</p>

<p>| character_set_results | utf8 |</p>

<p>| character_set_server | utf8 |</p>

<p>| character_set_system | utf8 |</p>

<p>| character_sets_dir |
D:\server\mysql-5.6.26-winx64\share\charsets\ |</p>

<p>+--------------------------+-----------------------------------------------+</p>

<p>8 rows in set (0.00 sec)</p>

<p>mysql&gt;SHOW VARIABLES LIKE 'collation_%';</p>

<p>+----------------------+-----------------+</p>

<p>| Variable_name | Value |</p>

<p>+----------------------+-----------------+</p>

<p>| collation_connection | utf8_general_ci |</p>

<p>| collation_database | utf8_general_ci |</p>

<p>| collation_server | utf8_general_ci |</p>

<p>+----------------------+-----------------+</p>

<p>3 rows in set (0.01 sec)</p>

<p>修改配置文件 /etc/my.cnf</p>

<p>[mysqld]\
port 3306\
datadir=/var/lib/mysql\
socket=/var/lib/mysql/mysql.sock\
user=mysql\
# Disabling symbolic-links is recommended to prevent assorted security
risks\
symbolic-links=0\
character_set_server = utf8\
[mysqld_safe]\
log-error=/var/log/mysqld.log\
pid-file=/var/run/mysqld/mysqld.pid\
[mysql]\
default-character-set = utf8</p>

<h3 class="sectionedit3" id="mysql密码修改">MySQL密码修改</h3>

<p>mysqladmin -u root password 'root'</p>

<p>mysqladmin -u root password ' root '</p>

<p>SET PASSWORD FOR 'root'@'localhost'=PASSWORD('root');</p>

<p>SET PASSWORD FOR 'root'@'%'=PASSWORD('root');</p>

<p>删除匿名用户</p>

<p>delete from mysql.user where user='';　</p>

<p>flush privileges;</p>

<p>MYSQL5.7修改密码</p>

<p>ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';</p>

<p>vi /etc/my.cnf</p>

<p>validate_password = OFF;</p>

<h3 class="sectionedit3" id="mysql远程登录">MySQL远程登录</h3>

<p>grant all privileges on *.* to 'root'@'%' identified by 'root' with
grant option;</p>

<p>flush privileges;</p>

<p>grant all privileges on media.* to medical_app@'%'  identified by
'medical_app' with grant option;</p>

<p>创建数据库</p>

<p>CREATE DATABASE IF NOT EXISTS media DEFAULT CHARSET utf8 COLLATE
utf8_general_ci;</p>

<p>执行SQL文件</p>

<p>mysql -h rdsjruzybjruzyb.mysql.rds.aliyuncs.com -u root -p
--default-character-set=utf8 –A source /root/Job.sql</p>

<p>导出SQL结构数据</p>

<p>mysqldump -u root -p media --default-character-set=utf8 &gt;source.sql</p>

<p>ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';</p>

<h1 class="sectionedit1" id="postgresql安装配置">Postgresql安装配置</h1>

<p>#yum list postgres*</p>

<p>#yum install postgresql-server</p>

<p>yum install postgresql-contrib</p>

<p>#service postgresql initdb</p>

<p>#service postgresql restart</p>

<h2 class="sectionedit2" id="增加用户">增加用户</h2>

<p>sudo -u postgres createuser --superuser actor</p>

<p>sudo -u postgres psql postgres --command '\password actor'</p>

<p>sudo -u postgres createdb actor -O actor</p>

<p>pg_hba.conf</p>

<p>host all all 127.0.0.1/32 md5</p>

<p>host all all 172.19.1.50 md5</p>

<h1 class="sectionedit1" id="nginx安装配置">Nginx安装配置</h1>

<h2 class="sectionedit2" id="nginx下载">Nginx下载</h2>

<h2 class="sectionedit2" id="nginx_yum安装">Nginx YUM安装</h2>

<h3 class="sectionedit3" id="centos6">Centos6</h3>

<p>nginx的yum在线安装</p>

<p>wget
http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm</p>

<p>安装源库</p>

<p>chmod +x nginx-release-centos-6-0.el6.ngx.noarch.rpm </p>

<p>rpm -i nginx-release-centos-6-0.el6.ngx.noarch.rpm </p>

<p>安装nginx</p>

<p>yum install nginx</p>

<h3 class="sectionedit3" id="centos7">Centos7</h3>

<p>#rpm –Uvh
http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</p>

<p>安装nginx</p>

<p>yum install nginx</p>

<p>安装完成后</p>

<p>默认nginx配置文件: /etc/nginx/nginx.conf        
【nginx主要的配置文件】 </p>

<p>默认nginx的ssl配置文件: /etc/nginx/conf.d/ssl.conf
【配置SSL证书的，也可以并入到nginx.conf文件里】 </p>

<p>默认nginx的虚拟主机配置文件: /etc/nginx/conf.d/virtual.conf
【如同Apache的虚拟主机配置，也可以并入到nginx.conf文件里】 </p>

<p>默认的web_root文件夹路径: /usr/share/nginx/html
【web目录夹，放置Magento主程序】 </p>

<p>配置iptables</p>

<p>iptables -I INPUT 5 -p tcp --dport 80 -j ACCEPT</p>

<p>启动nginx</p>

<p>service nginx start</p>

<p>打开IP地址 可见“Welcome to nginx!”表示安装成功。</p>

<h2 class="sectionedit2" id="nginx编译安装方法">Nginx编译安装方法</h2>

<p>http://www.pcre.org pcre8.37 下载</p>

<p>yum -y install perl-devel perl-ExtUtils-Embed</p>

<p>yum -y install gcc gcc-c++</p>

<p>解压</p>

<ol><li>上传文件</li>
</ol><p>scp nginx-1.8.0.tar.gz root@192.168.1.130:/usr/local/soft/</p>

<ol><li>解压</li>
</ol><p>tar -zxvf nginx-1.8.0.tar.gz</p>

<p>cd nginx-1.8.0</p>

<p><span id="OLE_LINK1" class="anchor"><span id="OLE_LINK2" class="anchor"></span></span>./configure --prefix=/usr/local/nginx \\
--with-http_ssl_module \\
--with-http_realip_module \\
--with-http_addition_module \\
--with-http_sub_module \\
--with-http_dav_module \\
--with-http_flv_module \\
--with-http_gzip_static_module \\
--with-http_stub_status_module \\
--with-http_perl_module \\
--with-mail \\
<span id="OLE_LINK5" class="anchor"><span id="OLE_LINK6" class="anchor"></span></span>--with-mail_ssl_module \\
--with-pcre=/usr/local/soft/pcre-8.37\\
--with-openssl=/home/server/openssl-0.9.8zg</p>

<blockquote>
  <p>--with-zlib=/root/zlib-1.2.5</p>
</blockquote>

<p>make &amp;&amp; make install</p>

<p>--with-openssl=/root/<span id="OLE_LINK7" class="anchor"><span id="OLE_LINK8" class="anchor"></span></span>openssl-0.9.8o \\
--with-pcre \\
--with-pcre=/root/pcre-8.10 \\
--with-zlib=/root/zlib-1.2.5 \\
--with-http_geoip_module</p>

<h2 class="sectionedit2" id="nginx配置">Nginx配置</h2>

<h3 class="sectionedit3" id="默认主配置">默认主配置</h3>

<p>[root@light162 \~]# vi /etc/nginx/nginx.conf</p>

<p>user nginx;</p>

<p>worker_processes 1;</p>

<p>error_log /var/log/nginx/error.log warn;</p>

<p>pid /var/run/nginx.pid;</p>

<p>events {</p>

<p>worker_connections 1024;</p>

<p>}</p>

<p>http {</p>

<p>include /etc/nginx/mime.types;</p>

<p>default_type application/octet-stream;</p>

<p>log_format main '\$remote_addr - \$remote_user [\$time_local]
"\$request" '</p>

<p>'\$status \$body_bytes_sent "\$http_referer" '</p>

<p>'"\$http_user_agent" "\$http_x_forwarded_for"';</p>

<p>access_log /var/log/nginx/access.log main;</p>

<p>sendfile on;</p>

<p>#tcp_nopush on;</p>

<p>keepalive_timeout 65;</p>

<p>#gzip on;</p>

<p>include /etc/nginx/conf.d/*.conf;</p>

<p>}</p>

<h3 class="sectionedit3" id="http服务配置">HTTP服务配置</h3>

<p>[root@light162 \~]# vi /etc/nginx/conf.d/default.conf</p>

<p>server {</p>

<p>listen 80;</p>

<p>server_name localhost;</p>

<p>#charset koi8-r;</p>

<p>#access_log /var/log/nginx/log/host.access.log main;</p>

<p>location / {</p>

<p>root /usr/share/nginx/html;</p>

<p>index index.html index.htm;</p>

<p>}</p>

<p>#error_page 404 /404.html;</p>

<p># redirect server error pages to the static page /50x.html</p>

<p>#</p>

<p>error_page 500 502 503 504 /50x.html;</p>

<p>location = /50x.html {</p>

<p>root /usr/share/nginx/html;</p>

<p>}</p>

<p># proxy the PHP scripts to Apache listening on 127.0.0.1:80</p>

<p>#</p>

<p>#location \~ \.php\$ {</p>

<p># proxy_pass http://127.0.0.1;</p>

<p>#}</p>

<p># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</p>

<p>#</p>

<p>#location \~ \.php\$ {</p>

<p># root html;</p>

<p># fastcgi_pass 127.0.0.1:9000;</p>

<p># fastcgi_index index.php;</p>

<p># fastcgi_param SCRIPT_FILENAME /scripts\$fastcgi_script_name;</p>

<p># include fastcgi_params;</p>

<p>#}</p>

<p># deny access to .htaccess files, if Apache's document root</p>

<p># concurs with nginx's one</p>

<p>#</p>

<p>#location \~ /\.ht {</p>

<p># deny all;</p>

<p>#}</p>

<p>}</p>

<h3 class="sectionedit3" id="https服务配置">HTTPS服务配置</h3>

<p>[root@light162 \~]#vi /etc/nginx/conf.d/www.lightheart.com.cn.conf</p>

<p>server {</p>

<p>listen 443 ssl;</p>

<p>server_name www.lightheart.com.cn;</p>

<p>ssl on;</p>

<p>ssl_certificate
/etc/letsencrypt/live/www.lightheart.com.cn/fullchain.pem;</p>

<p>ssl_certificate_key
/etc/letsencrypt/live/www.lightheart.com.cn/privkey.pem;</p>

<p>ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</p>

<p>ssl_prefer_server_ciphers on;</p>

<p>ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';</p>

<p>#charset koi8-r;</p>

<p>#access_log /var/log/nginx/log/host.access.log main;</p>

<p>location / {</p>

<p>root /usr/share/nginx/html;</p>

<p>index index.html index.htm;</p>

<p>}</p>

<p>}</p>

<h2 class="sectionedit2" id="nginx_lua">NGINX LUA</h2>

<h1 class="sectionedit1" id="zabbix安装配置">Zabbix安装配置</h1>

<h2 class="sectionedit2" id="hosts配置1">HOSTS配置</h2>

<h3 class="sectionedit3" id="流程说明">流程说明</h3>

<h1 class="sectionedit1" id="zookeeper安装配置">ZooKeeper安装配置</h1>

<h2 class="sectionedit2" id="zookeeper下载">ZooKeeper下载</h2>

<h3 class="sectionedit3" id="伪集群安装流程步骤">伪集群安装流程步骤</h3>

<ol><li>解压zookeeper-3.3.6</li>
</ol><blockquote>
  <p>[root@light162 \~]#tar zookeeper-3.3.6.tar.gz</p>
</blockquote>

<ol><li>拷贝三份zookeeper-3.3.6</li>
</ol><p>[root@light162 data]#cp zookeeper-3.3.6-node1 zookeeper-3.4.6-node2
–R</p>

<p>[root@light162 data]#cp zookeeper-3.3.6-node1 zookeeper-3.4.6-node3
–R</p>

<ol><li>修改配置</li>
</ol><p>#zookeeper-3.3.6-node1的配置</p>

<p>tickTime=2000</p>

<p>initLimit=10</p>

<p>syncLimit=5</p>

<p>dataDir=/root/zookeeper-3.3.6-2181/data</p>

<p>clientPort=2181</p>

<p>server.2181=localhost:2887:3887</p>

<p>server.2182=localhost:2888:3888</p>

<p>server.2183=localhost:2889:3889</p>

<p>#zookeeper-3.3.6-node2的配置</p>

<p>tickTime=2000</p>

<p>initLimit=10</p>

<p>syncLimit=5</p>

<p>dataDir=/root/zookeeper-3.3.6-2182/data</p>

<p>clientPort=2182</p>

<p>server.2181=localhost:2887:3887</p>

<p>server.2182=localhost:2888:3888</p>

<p>server.2183=localhost:2889:3889</p>

<p>#zookeeper-3.3.6-node1的配置</p>

<p>tickTime=2000</p>

<p>initLimit=10</p>

<p>syncLimit=5</p>

<p>dataDir=/root/zookeeper-3.3.6-2183/data</p>

<p>clientPort=2183</p>

<p>server.2181=localhost:2887:3887</p>

<p>server.2182=localhost:2888:3888</p>

<p>server.2183=localhost:2889:3889</p>

<p>echo 2181 &gt; /root/zookeeper-3.3.6-2181/data/myid</p>

<p>echo 2182 &gt; /root/zookeeper-3.3.6-2182/data/myid</p>

<p>echo 2183 &gt; /root/zookeeper-3.3.6-2183/data/myid</p>

<ol><li>启动三个zookeeper</li>
</ol><p>[root@light162 \~]#./bin/zkServer.sh start</p>

<ol><li>检查集群状态</li>
</ol><p>echo stat|nc localhost 2181</p>

<p>echo stat|nc localhost 2182</p>

<p>echo stat|nc localhost 2183</p>

<p>[root@light162 data]# echo stat|nc localhost 2182</p>

<p>Zookeeper version: 3.3.6-1366786, built on 07/29/2012 06:22 GMT</p>

<p>Clients:</p>

<p>/0:0:0:0:0:0:0:1:39374[0](queued=0,recved=1,sent=0)</p>

<p>Latency min/avg/max: 0/0/0</p>

<p>Received: 2</p>

<p>Sent: 1</p>

<p>Outstanding: 0</p>

<p>Zxid: 0x100000000</p>

<p>Mode: leader</p>

<p>Node count: 4</p>

<h3 class="sectionedit3" id="说明">说明</h3>

<h1 class="sectionedit1" id="mongodb安装配置">Mongodb安装配置</h1>

<h2 class="sectionedit2" id="mongodb下载">Mongodb下载</h2>

<h3 class="sectionedit3" id="流程说明1">流程说明</h3>

<h1 class="sectionedit1" id="redis安装配置">Redis安装配置</h1>

<h2 class="sectionedit2" id="redis下载">Redis下载</h2>

<h3 class="sectionedit3" id="流程说明2">流程说明</h3>

<p>\$ wget http://download.redis.io/releases/redis-3.2.0.tar.gz</p>

<p>\$ tar xzf redis-3.2.0.tar.gz</p>

<p>\$ cd redis-3.2.0</p>

<p>\$ make</p>

<h1 class="sectionedit1" id="codis安装配置">Codis安装配置</h1>

<h2 class="sectionedit2" id="codis下载">Codis下载</h2>

<h3 class="sectionedit3" id="流程说明3">流程说明</h3>

<h1 class="sectionedit1" id="ssl_tls_certificates">SSL/TLS Certificates</h1>

<h2 class="sectionedit2" id="let_s_encrypt">let's encrypt</h2>

<p>Let’s encrypt 申请的证书有效期为90天。</p>

<h3 class="sectionedit3" id="创建https证书">创建HTTPS证书</h3>

<ul><li>下载 letsencrypt</li>
</ul><p>[root@light162 \~]#git clone
https://github.com/letsencrypt/letsencrypt</p>

<p>[root@light162 \~]#cd letsencrypt/</p>

<ul><li>运行letsencrypt</li>
</ul><p>[root@light162 letsencrypt]#./letsencrypt-auto certonly -a manual</p>

<p>Checking for new version...</p>

<p>Creating virtual environment...</p>

<p>Installing Python packages...</p>

<p><img src="media/image1.png" alt="">{width="6.302083333333333in"
height="3.5930555555555554in"}</p>

<p><img src="media/image2.png" alt="">{width="6.302083333333333in"
height="3.5930555555555554in"}</p>

<p><img src="media/image3.png" alt="">{width="6.302083333333333in"
height="3.5930555555555554in"}</p>

<p><img src="media/image4.png" alt="">{width="6.302083333333333in"
height="3.604861111111111in"}</p>

<p>Make sure your web server displays the following content at</p>

<p>http://www.lightheart.com.cn/.well-known/acme-challenge/9QQtWhouc_0yIwwDId2fx9MjdziNuYXWXL3ZE_UnlMY
before continuing:</p>

<p>9QQtWhouc_0yIwwDId2fx9MjdziNuYXWXL3ZE_UnlMY.TxdhvpDCGsU1MlHlAByz3OnHpDi1nZcXBFVW4yVDk7k</p>

<p>If you don't have HTTP server configured, you can run the following</p>

<p>command on the target server (as root):</p>

<p>mkdir -p /tmp/letsencrypt/public_html/.well-known/acme-challenge</p>

<p>cd /tmp/letsencrypt/public_html</p>

<p>printf "%s"
9QQtWhouc_0yIwwDId2fx9MjdziNuYXWXL3ZE_UnlMY.TxdhvpDCGsU1MlHlAByz3OnHpDi1nZcXBFVW4yVDk7k
&gt;
.well-known/acme-challenge/9QQtWhouc_0yIwwDId2fx9MjdziNuYXWXL3ZE_UnlMY</p>

<p># run only once per server:</p>

<p>\$(command -v python2 || command -v python2.7 || command -v python2.6)
-c \</p>

<p>"import BaseHTTPServer, SimpleHTTPServer; \</p>

<p>s = BaseHTTPServer.HTTPServer(('', 80),
SimpleHTTPServer.SimpleHTTPRequestHandler); \</p>

<p>s.serve_forever()"</p>

<p>Press ENTER to continue</p>

<ul><li>nginx配置,配置完成后执行Enter</li>
</ul><blockquote>
  <p>在lightheart.com.cn 对应的服务器上面根据上面信息配置nginx的80服务上</p>
</blockquote>

<p>location '/.well-known/acme-challenge' {</p>

<p>default_type "text/plain";</p>

<p>root /tmp/letsencrypt-auto;</p>

<p>}</p>

<p>[medical@lightdbm1 \~]\$ mkdir -p
/tmp/letsencrypt-auto/.well-known/acme-challenge</p>

<p>[medical@lightdbm1 \~]\$ cd /tmp/letsencrypt-auto/</p>

<p>[root@lightdbm1 letsencrypt-auto]# printf "%s"
9QQtWhouc_0yIwwDId2fx9MjdziNuYXWXL3ZE_UnlMY.TxdhvpDCGsU1MlHlAByz3OnHpDi1nZcXBFVW4yVDk7k
&gt;
.well-known/acme-challenge/9QQtWhouc_0yIwwDId2fx9MjdziNuYXWXL3ZE_UnlMY</p>

<ul><li>根据提示反复执行（多个域名配置时）,完成后如下</li>
</ul><p>IMPORTANT NOTES:</p>

<ul><li>Congratulations! Your certificate and chain have been saved at</li>
</ul><p>/etc/letsencrypt/live/www.lightheart.com.cn/fullchain.pem. Your</p>

<p>cert will expire on 2016-08-07. To obtain a new version of the</p>

<p>certificate in the future, simply run Let's Encrypt again.</p>

<ul><li>If you lose your account credentials, you can recover through</li>
</ul><p>e-mails sent to lig@lightheart.com.cn.</p>

<ul><li>Your account credentials have been saved in your Let's Encrypt</li>
</ul><p>configuration directory at /etc/letsencrypt. You should make a</p>

<p>secure backup of this folder now. This configuration directory will</p>

<p>also contain certificates and private keys obtained by Let's</p>

<p>Encrypt so making regular backups of this folder is ideal.</p>

<ul><li>If you like Let's Encrypt, please consider supporting our work by:</li>
</ul><p>Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate</p>

<p>Donating to EFF: https://eff.org/donate-le</p>

<ul><li>下载证书完成，软连接到在/etc/letsencrypt/live/目录下，一共4个文件</li>
</ul><p>cert.pem - Apache服务器端证书</p>

<p>chain.pem - Apache根证书和中继证书</p>

<p>fullchain.pem - Nginx所需要ssl_certificate文件</p>

<p>privkey.pem - 安全证书KEY文件</p>

<h3 class="sectionedit3" id="配置nginx服务">配置Nginx服务</h3>

<ul><li>配置nginx ssl.conf</li>
</ul><p>server {</p>

<p>listen 443 ssl;</p>

<p>server_name www.lightheart.com.cn;</p>

<p>ssl on;</p>

<p>ssl_certificate
/etc/letsencrypt/live/www.lightheart.com.cn/fullchain.pem;</p>

<p>ssl_certificate_key
/etc/letsencrypt/live/www.lightheart.com.cn/privkey.pem;</p>

<p>ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</p>

<p>ssl_prefer_server_ciphers on;</p>

<p>ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';</p>

<p>#charset koi8-r;</p>

<p>#access_log /var/log/nginx/log/host.access.log main;</p>

<p>location / {</p>

<p>root /usr/share/nginx/html;</p>

<p>index index.html index.htm;</p>

<p>}</p>

<p>}</p>

<h3 class="sectionedit3" id="自动续签https证书">自动续签HTTPS证书</h3>

<ul><li>创建续签文件</li>
</ul><p>[root@light162 \~]#cp /root/letsencrypt/examples/cli.ini
/usr/local/etc/le-renew-webroot.ini</p>

<p>[root@light162 \~]#vi /usr/local/etc/le-renew-webroot.ini</p>

<p>rsa-key-size = 4096</p>

<p>email = lig@lightheart.com.cn</p>

<p>domains = www.lightheart.com.cn</p>

<p>webroot-path = /usr/share/nginx/html</p>

<ul><li>续签命令</li>
</ul><p>./letsencrypt-auto certonly -a webroot –agree-tos –renew-by-default
–webroot-path=/usr/share/nginx/html -d lightheart.com.cn -d
www.lightheart.com.cn</p>

<p>或</p>

<p>./letsencrypt-auto certonly -a webroot –renew-by-default –config
/usr/local/etc/le-renew-webroot.ini</p>

<p>service nginx reload</p>

<ul><li>下载自动续签脚本</li>
</ul><p>[root@light162 \~]#curl -L -o /usr/local/sbin/le-renew-webroot
https://gist.githubusercontent.com/thisismitch/e1b603165523df66d5cc/raw/fbffbf358e96110d5566f13677d9bd5f4f65794c/le-renew-webroot</p>

<p>[root@light162 \~]#chmod +x /usr/local/sbin/le-renew-webroot</p>

<p>[root@light162 \~]#le-renew-webroot</p>

<p>Checking expiration date for www.lightheart.com.cn...</p>

<p>The certificate is up to date, no need for renewal (89 days left).</p>

<ul><li>创建定时任务：</li>
</ul><p>crontab -e</p>

<p>添加下面一行，让每周一早上 2 点 30 分运行一次，并记录到日志文件中。</p>

<p>30 2 * * 1 /usr/local/sbin/le-renew-webroot &gt;&gt;
/var/log/le-renewal.log</p>

<h2 class="sectionedit2" id="其他">其他</h2>

<h3 class="sectionedit3" id="其他流程说明">其他流程说明</h3>

<h1 class="sectionedit1" id="vpn安装配置">VPN安装配置</h1>

<h2 class="sectionedit2" id="pptp">Pptp</h2>

<p>检查内核MPPE补丁</p>

<p># modprobe ppp-compress-18 &amp;&amp; echo 'ok!!!'</p>

<p>#yum install ppp</p>

<p><a href="http://poptop.sourceforge.net/yum/stable/rhel6Server/x86_64/"><em>http://poptop.sourceforge.net/yum/stable/rhel6Server/x86_64/</em></a></p>

<p># vi /etc/pptpd.conf</p>

<p>localip 192.168.0.1</p>

<p>remoteip 192.168.0.234-238,192.168.0.245</p>

<p># vi /etc/ppp/options.pptpd</p>

<p>ms-dns 8.8.8.8</p>

<p>ms-dns 8.8.4.4</p>

<p>设置用户</p>

<p># vi /etc/ppp/chap-secrets 或</p>

<p># vpnuser add lig lig***</p>

<p>设置内核，支持转发命令</p>

<p># vi /etc/sysctl.conf</p>

<blockquote>
  <p>将net.ipv4.ip_forward=0 \
  改成net.ipv4.ip_forward=1 \
  将net.ipv4.tcp_syncookies= 1 \
  改成 #net.ipv4.tcp_syncookies= 1 </p>
</blockquote>

<p>防火墙配置</p>

<p>iptables -A INPUT -i eth0 -p tcp --dport 1723 -j ACCEPT</p>

<p>iptables -A INPUT -i eth0 -p gre -j ACCEPT</p>

<p>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</p>

<p>iptables -A FORWARD -i ppp+ -o eth0 -j ACCEPT</p>

<p>iptables -A FORWARD -i eth0 -o ppp+ -j ACCEPT</p>

<p>service iptables save</p>

<p>service iptables restart</p>

<p># service pptpd start</p>

<p># chkconfig pptpd on</p>

<p># chkconfig iptables on</p>

<h1 class="sectionedit1" id="github">Github</h1>

<p>#ssh-keygen -t rsa -C "airshiplay@126.com"</p>

<h1 class="sectionedit1" id="docker">Docker</h1>

<p>http://wiki.jikexueyuan.com/project/docker/userguide/README.html</p>

<p>\$ sudo yum install docker</p>

<p>\$ sudo service docker start</p>

<p>\$ sudo chkconfig docker on</p>

<p>\$ sudo docker pull centos</p>

<p>\$ sudo docker images centos</p>

<p>\$ sudo docker run -i -t centos /bin/bash</p>

<h1 class="sectionedit1" id="ansible">ansible</h1>

<h2 class="sectionedit2" id="基础配置">基础配置</h2>

<h1 class="sectionedit1" id="jenkins">Jenkins</h1>

<p>http://pkg.jenkins-ci.org/redhat-stable/</p>

<blockquote>
  <p>sudo wget -O /etc/yum.repos.d/jenkins.repo
  http://pkg.jenkins.io/redhat-stable/jenkins.repo</p>
  
  <p>sudo rpm --import http://pkg.jenkins.io/redhat-stable/jenkins.io.key</p>
  
  <p>yum install jenkins</p>
</blockquote>

<p>Linux Android SDK</p>

<p>yum install glibc.i686</p>

<p>yum install zlib.i686 libstdc++.i686 --setopt=protected_multilib=false</p>
